{
  "version": 4,
  "terraform_version": "1.1.9",
  "serial": 127,
  "lineage": "fec1dfbf-3680-530e-03c7-404db08d549f",
  "outputs": {
    "alb_sg_id": {
      "value": {
        "arn": "arn:aws:ec2:ap-south-1:228431726353:security-group/sg-0f3996329875fac92",
        "description": "Allow SSH inbound traffic",
        "egress": [
          {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "",
            "from_port": 0,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_groups": [],
            "self": false,
            "to_port": 0
          }
        ],
        "id": "sg-0f3996329875fac92",
        "ingress": [
          {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "",
            "from_port": 22,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 22
          },
          {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "",
            "from_port": 3000,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 3000
          },
          {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "",
            "from_port": 80,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 80
          }
        ],
        "name": "allow_SSH",
        "name_prefix": "",
        "owner_id": "228431726353",
        "revoke_rules_on_delete": false,
        "tags": {},
        "tags_all": {},
        "timeouts": null,
        "vpc_id": "vpc-0304096b"
      },
      "type": [
        "object",
        {
          "arn": "string",
          "description": "string",
          "egress": [
            "set",
            [
              "object",
              {
                "cidr_blocks": [
                  "list",
                  "string"
                ],
                "description": "string",
                "from_port": "number",
                "ipv6_cidr_blocks": [
                  "list",
                  "string"
                ],
                "prefix_list_ids": [
                  "list",
                  "string"
                ],
                "protocol": "string",
                "security_groups": [
                  "set",
                  "string"
                ],
                "self": "bool",
                "to_port": "number"
              }
            ]
          ],
          "id": "string",
          "ingress": [
            "set",
            [
              "object",
              {
                "cidr_blocks": [
                  "list",
                  "string"
                ],
                "description": "string",
                "from_port": "number",
                "ipv6_cidr_blocks": [
                  "list",
                  "string"
                ],
                "prefix_list_ids": [
                  "list",
                  "string"
                ],
                "protocol": "string",
                "security_groups": [
                  "set",
                  "string"
                ],
                "self": "bool",
                "to_port": "number"
              }
            ]
          ],
          "name": "string",
          "name_prefix": "string",
          "owner_id": "string",
          "revoke_rules_on_delete": "bool",
          "tags": [
            "map",
            "string"
          ],
          "tags_all": [
            "map",
            "string"
          ],
          "timeouts": [
            "object",
            {
              "create": "string",
              "delete": "string"
            }
          ],
          "vpc_id": "string"
        }
      ]
    },
    "app_sg_id": {
      "value": {
        "arn": "arn:aws:ec2:ap-south-1:228431726353:security-group/sg-0f3996329875fac92",
        "description": "Allow SSH inbound traffic",
        "egress": [
          {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "",
            "from_port": 0,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_groups": [],
            "self": false,
            "to_port": 0
          }
        ],
        "id": "sg-0f3996329875fac92",
        "ingress": [
          {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "",
            "from_port": 22,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 22
          },
          {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "",
            "from_port": 3000,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 3000
          },
          {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "",
            "from_port": 80,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 80
          }
        ],
        "name": "allow_SSH",
        "name_prefix": "",
        "owner_id": "228431726353",
        "revoke_rules_on_delete": false,
        "tags": {},
        "tags_all": {},
        "timeouts": null,
        "vpc_id": "vpc-0304096b"
      },
      "type": [
        "object",
        {
          "arn": "string",
          "description": "string",
          "egress": [
            "set",
            [
              "object",
              {
                "cidr_blocks": [
                  "list",
                  "string"
                ],
                "description": "string",
                "from_port": "number",
                "ipv6_cidr_blocks": [
                  "list",
                  "string"
                ],
                "prefix_list_ids": [
                  "list",
                  "string"
                ],
                "protocol": "string",
                "security_groups": [
                  "set",
                  "string"
                ],
                "self": "bool",
                "to_port": "number"
              }
            ]
          ],
          "id": "string",
          "ingress": [
            "set",
            [
              "object",
              {
                "cidr_blocks": [
                  "list",
                  "string"
                ],
                "description": "string",
                "from_port": "number",
                "ipv6_cidr_blocks": [
                  "list",
                  "string"
                ],
                "prefix_list_ids": [
                  "list",
                  "string"
                ],
                "protocol": "string",
                "security_groups": [
                  "set",
                  "string"
                ],
                "self": "bool",
                "to_port": "number"
              }
            ]
          ],
          "name": "string",
          "name_prefix": "string",
          "owner_id": "string",
          "revoke_rules_on_delete": "bool",
          "tags": [
            "map",
            "string"
          ],
          "tags_all": [
            "map",
            "string"
          ],
          "timeouts": [
            "object",
            {
              "create": "string",
              "delete": "string"
            }
          ],
          "vpc_id": "string"
        }
      ]
    },
    "cloudwatch_log_group_arn": {
      "value": "arn:aws:logs:ap-south-1:228431726353:log-group:mycluster-logs",
      "type": "string"
    },
    "code_pipeline_artifact_s3_id": {
      "value": "expressjsbucket11",
      "type": "string"
    },
    "code_pipeline_id": {
      "value": "expresspipeline",
      "type": "string"
    },
    "ecs_repository_url": {
      "value": "228431726353.dkr.ecr.ap-south-1.amazonaws.com/expressjs-repo",
      "type": "string"
    },
    "ecs_sg_id": {
      "value": {
        "arn": "arn:aws:ec2:ap-south-1:228431726353:security-group/sg-0f3996329875fac92",
        "description": "Allow SSH inbound traffic",
        "egress": [
          {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "",
            "from_port": 0,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_groups": [],
            "self": false,
            "to_port": 0
          }
        ],
        "id": "sg-0f3996329875fac92",
        "ingress": [
          {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "",
            "from_port": 22,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 22
          },
          {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "",
            "from_port": 3000,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 3000
          },
          {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "",
            "from_port": 80,
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_groups": [],
            "self": false,
            "to_port": 80
          }
        ],
        "name": "allow_SSH",
        "name_prefix": "",
        "owner_id": "228431726353",
        "revoke_rules_on_delete": false,
        "tags": {},
        "tags_all": {},
        "timeouts": null,
        "vpc_id": "vpc-0304096b"
      },
      "type": [
        "object",
        {
          "arn": "string",
          "description": "string",
          "egress": [
            "set",
            [
              "object",
              {
                "cidr_blocks": [
                  "list",
                  "string"
                ],
                "description": "string",
                "from_port": "number",
                "ipv6_cidr_blocks": [
                  "list",
                  "string"
                ],
                "prefix_list_ids": [
                  "list",
                  "string"
                ],
                "protocol": "string",
                "security_groups": [
                  "set",
                  "string"
                ],
                "self": "bool",
                "to_port": "number"
              }
            ]
          ],
          "id": "string",
          "ingress": [
            "set",
            [
              "object",
              {
                "cidr_blocks": [
                  "list",
                  "string"
                ],
                "description": "string",
                "from_port": "number",
                "ipv6_cidr_blocks": [
                  "list",
                  "string"
                ],
                "prefix_list_ids": [
                  "list",
                  "string"
                ],
                "protocol": "string",
                "security_groups": [
                  "set",
                  "string"
                ],
                "self": "bool",
                "to_port": "number"
              }
            ]
          ],
          "name": "string",
          "name_prefix": "string",
          "owner_id": "string",
          "revoke_rules_on_delete": "bool",
          "tags": [
            "map",
            "string"
          ],
          "tags_all": [
            "map",
            "string"
          ],
          "timeouts": [
            "object",
            {
              "create": "string",
              "delete": "string"
            }
          ],
          "vpc_id": "string"
        }
      ]
    },
    "vpc_id": {
      "value": "vpc-0304096b",
      "type": "string"
    },
    "vpc_public_subnet_ids": {
      "value": [
        "subnet-fa1e86b6",
        "subnet-6b416b03",
        "subnet-a472d0df"
      ],
      "type": [
        "tuple",
        [
          "string",
          "string",
          "string"
        ]
      ]
    }
  },
  "resources": [
    {
      "module": "module.ecs",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "ecs_service_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3615693260",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",\n        \"elasticloadbalancing:Describe*\",\n        \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",\n        \"ec2:Describe*\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:Describe*",
                  "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                  "elasticloadbalancing:Describe*",
                  "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "ecs_service_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3622649364",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ecs.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ecs.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "data",
      "type": "template_file",
      "name": "api_task",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "022cac34326a255e23e996b85309cd6a8441cb0dc6ff6b6a00b71ed2b4812804",
            "rendered": "[\n    {\n      \"name\": \"container\",\n      \"image\": \"228431726353.dkr.ecr.ap-south-1.amazonaws.com/expressjs-repo\",\n      \"portMappings\": [\n        {\n          \"containerPort\": 3000,\n          \"hostPort\": 3000\n        }\n      ],\n      \"cpu\": 256,\n      \"memory\": 512,\n      \"networkMode\": \"awsvpc\",\n      \"essential\": true,\n      \"logConfiguration\": {\n        \"logDriver\": \"awslogs\",\n        \"options\": {\n          \"awslogs-group\": \"mycluster-logs\",\n          \"awslogs-region\": \"ap-south-1\",\n          \"awslogs-stream-prefix\": \"container\"\n        }\n      },\n      \"environment\": [{\"name\":\"KEY\",\"value\":\"value\"}]\n    }\n  ]\n",
            "template": "[\n    {\n      \"name\": \"${container_name}\",\n      \"image\": \"${image}\",\n      \"portMappings\": [\n        {\n          \"containerPort\": ${container_port},\n          \"hostPort\": ${container_port}\n        }\n      ],\n      \"cpu\": ${desired_task_cpu},\n      \"memory\": ${desired_task_memory},\n      \"networkMode\": \"awsvpc\",\n      \"essential\": true,\n      \"logConfiguration\": {\n        \"logDriver\": \"awslogs\",\n        \"options\": {\n          \"awslogs-group\": \"${log_group}\",\n          \"awslogs-region\": \"ap-south-1\",\n          \"awslogs-stream-prefix\": \"${container_name}\"\n        }\n      },\n      \"environment\": [${environment_variables_str}]\n    }\n  ]\n",
            "vars": {
              "container_name": "container",
              "container_port": "3000",
              "desired_task_cpu": "256",
              "desired_task_memory": "512",
              "environment_variables_str": "{\"name\":\"KEY\",\"value\":\"value\"}",
              "image": "228431726353.dkr.ecr.ap-south-1.amazonaws.com/expressjs-repo",
              "log_group": "mycluster-logs"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_alb",
      "name": "app_alb",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_logs": [
              {
                "bucket": "",
                "enabled": false,
                "prefix": ""
              }
            ],
            "arn": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:loadbalancer/app/elb/d3a3cbb7de4891da",
            "arn_suffix": "app/elb/d3a3cbb7de4891da",
            "customer_owned_ipv4_pool": "",
            "desync_mitigation_mode": "defensive",
            "dns_name": "elb-1423496006.ap-south-1.elb.amazonaws.com",
            "drop_invalid_header_fields": false,
            "enable_cross_zone_load_balancing": null,
            "enable_deletion_protection": false,
            "enable_http2": true,
            "enable_waf_fail_open": false,
            "id": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:loadbalancer/app/elb/d3a3cbb7de4891da",
            "idle_timeout": 60,
            "internal": false,
            "ip_address_type": "ipv4",
            "load_balancer_type": "application",
            "name": "elb",
            "name_prefix": null,
            "security_groups": [
              "sg-0f3996329875fac92"
            ],
            "subnet_mapping": [
              {
                "allocation_id": "",
                "ipv6_address": "",
                "outpost_id": "",
                "private_ipv4_address": "",
                "subnet_id": "subnet-6b416b03"
              },
              {
                "allocation_id": "",
                "ipv6_address": "",
                "outpost_id": "",
                "private_ipv4_address": "",
                "subnet_id": "subnet-a472d0df"
              },
              {
                "allocation_id": "",
                "ipv6_address": "",
                "outpost_id": "",
                "private_ipv4_address": "",
                "subnet_id": "subnet-fa1e86b6"
              }
            ],
            "subnets": [
              "subnet-6b416b03",
              "subnet-a472d0df",
              "subnet-fa1e86b6"
            ],
            "tags": {
              "Environment": "app_alb"
            },
            "tags_all": {
              "Environment": "app_alb"
            },
            "timeouts": null,
            "vpc_id": "vpc-0304096b",
            "zone_id": "ZP97RAFLXTNZK"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.ecs.aws_security_group.elb_sg"
          ]
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_alb_target_group",
      "name": "api_target_group1",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:targetgroup/express-example-lb-tg/bb4a178e2fa45508",
            "arn_suffix": "targetgroup/express-example-lb-tg/bb4a178e2fa45508",
            "connection_termination": false,
            "deregistration_delay": "300",
            "health_check": [
              {
                "enabled": true,
                "healthy_threshold": 5,
                "interval": 30,
                "matcher": "200",
                "path": "/",
                "port": "traffic-port",
                "protocol": "HTTP",
                "timeout": 5,
                "unhealthy_threshold": 2
              }
            ],
            "id": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:targetgroup/express-example-lb-tg/bb4a178e2fa45508",
            "lambda_multi_value_headers_enabled": false,
            "load_balancing_algorithm_type": "round_robin",
            "name": "express-example-lb-tg",
            "name_prefix": null,
            "port": 80,
            "preserve_client_ip": null,
            "protocol": "HTTP",
            "protocol_version": "HTTP1",
            "proxy_protocol_v2": false,
            "slow_start": 0,
            "stickiness": [
              {
                "cookie_duration": 86400,
                "cookie_name": "",
                "enabled": false,
                "type": "lb_cookie"
              }
            ],
            "tags": {},
            "tags_all": {},
            "target_type": "ip",
            "vpc_id": "vpc-0304096b"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_alb_target_group",
      "name": "api_target_group2",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:targetgroup/express-example-lb-tg-1/4bd72755068ddb0a",
            "arn_suffix": "targetgroup/express-example-lb-tg-1/4bd72755068ddb0a",
            "connection_termination": false,
            "deregistration_delay": "300",
            "health_check": [
              {
                "enabled": true,
                "healthy_threshold": 5,
                "interval": 30,
                "matcher": "200",
                "path": "/",
                "port": "traffic-port",
                "protocol": "HTTP",
                "timeout": 5,
                "unhealthy_threshold": 2
              }
            ],
            "id": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:targetgroup/express-example-lb-tg-1/4bd72755068ddb0a",
            "lambda_multi_value_headers_enabled": false,
            "load_balancing_algorithm_type": "round_robin",
            "name": "express-example-lb-tg-1",
            "name_prefix": null,
            "port": 3000,
            "preserve_client_ip": null,
            "protocol": "HTTP",
            "protocol_version": "HTTP1",
            "proxy_protocol_v2": false,
            "slow_start": 0,
            "stickiness": [
              {
                "cookie_duration": 86400,
                "cookie_name": "",
                "enabled": false,
                "type": "lb_cookie"
              }
            ],
            "tags": {},
            "tags_all": {},
            "target_type": "ip",
            "vpc_id": "vpc-0304096b"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "app_down",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:autoscaling:ap-south-1:228431726353:scalingPolicy:6aaaec3e-a406-4a32-9ccd-be64443aee55:resource/ecs/service/mycluster/expressservice:policyName/mycluster-scale-down",
            "id": "mycluster-scale-down",
            "name": "mycluster-scale-down",
            "policy_type": "StepScaling",
            "resource_id": "service/mycluster/expressservice",
            "scalable_dimension": "ecs:service:DesiredCount",
            "service_namespace": "ecs",
            "step_scaling_policy_configuration": [
              {
                "adjustment_type": "ChangeInCapacity",
                "cooldown": 300,
                "metric_aggregation_type": "Average",
                "min_adjustment_magnitude": 0,
                "step_adjustment": [
                  {
                    "metric_interval_lower_bound": "",
                    "metric_interval_upper_bound": "0",
                    "scaling_adjustment": -1
                  }
                ]
              }
            ],
            "target_tracking_scaling_policy_configuration": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.ecs.aws_alb_target_group.api_target_group2",
            "module.ecs.aws_appautoscaling_target.app_scale_target",
            "module.ecs.aws_cloudwatch_log_group.web-app",
            "module.ecs.aws_ecr_repository.web-app",
            "module.ecs.aws_ecs_cluster.cluster",
            "module.ecs.aws_ecs_service.web-api",
            "module.ecs.aws_ecs_task_definition.web-api",
            "module.ecs.aws_iam_role.ecs_execution_role",
            "module.ecs.aws_iam_role.ecs_role",
            "module.ecs.aws_iam_role_policy.ecs_service_role_policy",
            "module.ecs.aws_security_group.elb_sg",
            "module.ecs.data.aws_iam_policy_document.ecs_service_policy",
            "module.ecs.data.aws_iam_policy_document.ecs_service_role",
            "module.ecs.data.template_file.api_task"
          ]
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "app_up",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:autoscaling:ap-south-1:228431726353:scalingPolicy:6aaaec3e-a406-4a32-9ccd-be64443aee55:resource/ecs/service/mycluster/expressservice:policyName/mycluster-app-scale-up",
            "id": "mycluster-app-scale-up",
            "name": "mycluster-app-scale-up",
            "policy_type": "StepScaling",
            "resource_id": "service/mycluster/expressservice",
            "scalable_dimension": "ecs:service:DesiredCount",
            "service_namespace": "ecs",
            "step_scaling_policy_configuration": [
              {
                "adjustment_type": "ChangeInCapacity",
                "cooldown": 60,
                "metric_aggregation_type": "Average",
                "min_adjustment_magnitude": 0,
                "step_adjustment": [
                  {
                    "metric_interval_lower_bound": "0",
                    "metric_interval_upper_bound": "",
                    "scaling_adjustment": 1
                  }
                ]
              }
            ],
            "target_tracking_scaling_policy_configuration": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.ecs.aws_alb_target_group.api_target_group2",
            "module.ecs.aws_appautoscaling_target.app_scale_target",
            "module.ecs.aws_cloudwatch_log_group.web-app",
            "module.ecs.aws_ecr_repository.web-app",
            "module.ecs.aws_ecs_cluster.cluster",
            "module.ecs.aws_ecs_service.web-api",
            "module.ecs.aws_ecs_task_definition.web-api",
            "module.ecs.aws_iam_role.ecs_execution_role",
            "module.ecs.aws_iam_role.ecs_role",
            "module.ecs.aws_iam_role_policy.ecs_service_role_policy",
            "module.ecs.aws_security_group.elb_sg",
            "module.ecs.data.aws_iam_policy_document.ecs_service_policy",
            "module.ecs.data.aws_iam_policy_document.ecs_service_role",
            "module.ecs.data.template_file.api_task"
          ]
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "app_scale_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "service/mycluster/expressservice",
            "max_capacity": 4,
            "min_capacity": 2,
            "resource_id": "service/mycluster/expressservice",
            "role_arn": "arn:aws:iam::228431726353:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            "scalable_dimension": "ecs:service:DesiredCount",
            "service_namespace": "ecs"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.ecs.aws_alb_target_group.api_target_group2",
            "module.ecs.aws_cloudwatch_log_group.web-app",
            "module.ecs.aws_ecr_repository.web-app",
            "module.ecs.aws_ecs_cluster.cluster",
            "module.ecs.aws_ecs_service.web-api",
            "module.ecs.aws_ecs_task_definition.web-api",
            "module.ecs.aws_iam_role.ecs_execution_role",
            "module.ecs.aws_iam_role.ecs_role",
            "module.ecs.aws_iam_role_policy.ecs_service_role_policy",
            "module.ecs.aws_security_group.elb_sg",
            "module.ecs.data.aws_iam_policy_document.ecs_service_policy",
            "module.ecs.data.aws_iam_policy_document.ecs_service_role",
            "module.ecs.data.template_file.api_task"
          ]
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "web-app",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:ap-south-1:228431726353:log-group:mycluster-logs",
            "id": "mycluster-logs",
            "kms_key_id": "",
            "name": "mycluster-logs",
            "name_prefix": null,
            "retention_in_days": 0,
            "tags": {
              "Application": "mycluster"
            },
            "tags_all": {
              "Application": "mycluster"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_cloudwatch_metric_alarm",
      "name": "cpu_utilization_high",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "actions_enabled": true,
            "alarm_actions": [
              "arn:aws:autoscaling:ap-south-1:228431726353:scalingPolicy:6aaaec3e-a406-4a32-9ccd-be64443aee55:resource/ecs/service/mycluster/expressservice:policyName/mycluster-app-scale-up"
            ],
            "alarm_description": "",
            "alarm_name": "mycluster-CPU-Utilization-High",
            "arn": "arn:aws:cloudwatch:ap-south-1:228431726353:alarm:mycluster-CPU-Utilization-High",
            "comparison_operator": "GreaterThanOrEqualToThreshold",
            "datapoints_to_alarm": 0,
            "dimensions": {
              "ClusterName": "mycluster",
              "ServiceName": "expressservice"
            },
            "evaluate_low_sample_count_percentiles": "",
            "evaluation_periods": 1,
            "extended_statistic": "",
            "id": "mycluster-CPU-Utilization-High",
            "insufficient_data_actions": [],
            "metric_name": "CPUUtilization",
            "metric_query": [],
            "namespace": "AWS/ECS",
            "ok_actions": [],
            "period": 60,
            "statistic": "Average",
            "tags": {},
            "tags_all": {},
            "threshold": 80,
            "threshold_metric_id": "",
            "treat_missing_data": "missing",
            "unit": ""
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.ecs.aws_alb_target_group.api_target_group2",
            "module.ecs.aws_appautoscaling_policy.app_up",
            "module.ecs.aws_appautoscaling_target.app_scale_target",
            "module.ecs.aws_cloudwatch_log_group.web-app",
            "module.ecs.aws_ecr_repository.web-app",
            "module.ecs.aws_ecs_cluster.cluster",
            "module.ecs.aws_ecs_service.web-api",
            "module.ecs.aws_ecs_task_definition.web-api",
            "module.ecs.aws_iam_role.ecs_execution_role",
            "module.ecs.aws_iam_role.ecs_role",
            "module.ecs.aws_iam_role_policy.ecs_service_role_policy",
            "module.ecs.aws_security_group.elb_sg",
            "module.ecs.data.aws_iam_policy_document.ecs_service_policy",
            "module.ecs.data.aws_iam_policy_document.ecs_service_role",
            "module.ecs.data.template_file.api_task"
          ]
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_cloudwatch_metric_alarm",
      "name": "cpu_utilization_low",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "actions_enabled": true,
            "alarm_actions": [
              "arn:aws:autoscaling:ap-south-1:228431726353:scalingPolicy:6aaaec3e-a406-4a32-9ccd-be64443aee55:resource/ecs/service/mycluster/expressservice:policyName/mycluster-scale-down"
            ],
            "alarm_description": "",
            "alarm_name": "mycluster-CPU-Utilization-Low",
            "arn": "arn:aws:cloudwatch:ap-south-1:228431726353:alarm:mycluster-CPU-Utilization-Low",
            "comparison_operator": "LessThanThreshold",
            "datapoints_to_alarm": 0,
            "dimensions": {
              "ClusterName": "mycluster",
              "ServiceName": "expressservice"
            },
            "evaluate_low_sample_count_percentiles": "",
            "evaluation_periods": 1,
            "extended_statistic": "",
            "id": "mycluster-CPU-Utilization-Low",
            "insufficient_data_actions": [],
            "metric_name": "CPUUtilization",
            "metric_query": [],
            "namespace": "AWS/ECS",
            "ok_actions": [],
            "period": 60,
            "statistic": "Average",
            "tags": {},
            "tags_all": {},
            "threshold": 30,
            "threshold_metric_id": "",
            "treat_missing_data": "missing",
            "unit": ""
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.ecs.aws_alb_target_group.api_target_group2",
            "module.ecs.aws_appautoscaling_policy.app_down",
            "module.ecs.aws_appautoscaling_target.app_scale_target",
            "module.ecs.aws_cloudwatch_log_group.web-app",
            "module.ecs.aws_ecr_repository.web-app",
            "module.ecs.aws_ecs_cluster.cluster",
            "module.ecs.aws_ecs_service.web-api",
            "module.ecs.aws_ecs_task_definition.web-api",
            "module.ecs.aws_iam_role.ecs_execution_role",
            "module.ecs.aws_iam_role.ecs_role",
            "module.ecs.aws_iam_role_policy.ecs_service_role_policy",
            "module.ecs.aws_security_group.elb_sg",
            "module.ecs.data.aws_iam_policy_document.ecs_service_policy",
            "module.ecs.data.aws_iam_policy_document.ecs_service_role",
            "module.ecs.data.template_file.api_task"
          ]
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_ecr_repository",
      "name": "web-app",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecr:ap-south-1:228431726353:repository/expressjs-repo",
            "encryption_configuration": [
              {
                "encryption_type": "AES256",
                "kms_key": ""
              }
            ],
            "id": "expressjs-repo",
            "image_scanning_configuration": [
              {
                "scan_on_push": false
              }
            ],
            "image_tag_mutability": "MUTABLE",
            "name": "expressjs-repo",
            "registry_id": "228431726353",
            "repository_url": "228431726353.dkr.ecr.ap-south-1.amazonaws.com/expressjs-repo",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_ecs_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ecs:ap-south-1:228431726353:cluster/mycluster",
            "capacity_providers": [],
            "configuration": [],
            "default_capacity_provider_strategy": [],
            "id": "arn:aws:ecs:ap-south-1:228431726353:cluster/mycluster",
            "name": "mycluster",
            "setting": [
              {
                "name": "containerInsights",
                "value": "disabled"
              }
            ],
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_ecs_service",
      "name": "web-api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capacity_provider_strategy": [],
            "cluster": "arn:aws:ecs:ap-south-1:228431726353:cluster/mycluster",
            "deployment_circuit_breaker": [
              {
                "enable": false,
                "rollback": false
              }
            ],
            "deployment_controller": [
              {
                "type": "ECS"
              }
            ],
            "deployment_maximum_percent": 200,
            "deployment_minimum_healthy_percent": 100,
            "desired_count": 2,
            "enable_ecs_managed_tags": false,
            "enable_execute_command": false,
            "force_new_deployment": null,
            "health_check_grace_period_seconds": 0,
            "iam_role": "aws-service-role",
            "id": "arn:aws:ecs:ap-south-1:228431726353:service/mycluster/expressservice",
            "launch_type": "FARGATE",
            "load_balancer": [
              {
                "container_name": "container",
                "container_port": 3000,
                "elb_name": "",
                "target_group_arn": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:targetgroup/express-example-lb-tg-1/4bd72755068ddb0a"
              }
            ],
            "name": "expressservice",
            "network_configuration": [
              {
                "assign_public_ip": true,
                "security_groups": [
                  "sg-0f3996329875fac92"
                ],
                "subnets": [
                  "subnet-6b416b03",
                  "subnet-a472d0df",
                  "subnet-fa1e86b6"
                ]
              }
            ],
            "ordered_placement_strategy": [],
            "placement_constraints": [],
            "platform_version": "LATEST",
            "propagate_tags": "NONE",
            "scheduling_strategy": "REPLICA",
            "service_registries": [],
            "tags": {},
            "tags_all": {},
            "task_definition": "arn:aws:ecs:ap-south-1:228431726353:task-definition/api:3",
            "timeouts": null,
            "wait_for_steady_state": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxMjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.ecs.aws_alb_target_group.api_target_group2",
            "module.ecs.aws_cloudwatch_log_group.web-app",
            "module.ecs.aws_ecr_repository.web-app",
            "module.ecs.aws_ecs_cluster.cluster",
            "module.ecs.aws_ecs_task_definition.web-api",
            "module.ecs.aws_iam_role.ecs_execution_role",
            "module.ecs.aws_iam_role.ecs_role",
            "module.ecs.aws_iam_role_policy.ecs_service_role_policy",
            "module.ecs.aws_security_group.elb_sg",
            "module.ecs.data.aws_iam_policy_document.ecs_service_policy",
            "module.ecs.data.aws_iam_policy_document.ecs_service_role",
            "module.ecs.data.template_file.api_task"
          ]
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_ecs_task_definition",
      "name": "web-api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ecs:ap-south-1:228431726353:task-definition/api:3",
            "container_definitions": "[{\"cpu\":256,\"environment\":[{\"name\":\"KEY\",\"value\":\"value\"}],\"essential\":true,\"image\":\"228431726353.dkr.ecr.ap-south-1.amazonaws.com/expressjs-repo\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"mycluster-logs\",\"awslogs-region\":\"ap-south-1\",\"awslogs-stream-prefix\":\"container\"}},\"memory\":512,\"mountPoints\":[],\"name\":\"container\",\"portMappings\":[{\"containerPort\":3000,\"hostPort\":3000,\"protocol\":\"tcp\"}],\"volumesFrom\":[]}]",
            "cpu": "256",
            "ephemeral_storage": [],
            "execution_role_arn": "arn:aws:iam::228431726353:role/mycluster-ecs_task_role",
            "family": "api",
            "id": "api",
            "inference_accelerator": [],
            "ipc_mode": "",
            "memory": "512",
            "network_mode": "awsvpc",
            "pid_mode": "",
            "placement_constraints": [],
            "proxy_configuration": [],
            "requires_compatibilities": [
              "FARGATE"
            ],
            "revision": 3,
            "runtime_platform": [],
            "skip_destroy": false,
            "tags": {},
            "tags_all": {},
            "task_role_arn": "arn:aws:iam::228431726353:role/mycluster-ecs_task_role",
            "volume": []
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.ecs.aws_cloudwatch_log_group.web-app",
            "module.ecs.aws_ecr_repository.web-app",
            "module.ecs.aws_iam_role.ecs_execution_role",
            "module.ecs.data.template_file.api_task"
          ]
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "ecs_execution_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::228431726353:role/mycluster-ecs_task_role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2022-06-07T06:00:23Z",
            "description": "",
            "force_detach_policies": false,
            "id": "mycluster-ecs_task_role",
            "inline_policy": [
              {
                "name": "mycluster_role_policy",
                "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"ecr:GetAuthorizationToken\",\n          \"ecr:BatchCheckLayerAvailability\",\n          \"ecr:GetDownloadUrlForLayer\",\n          \"ecr:BatchGetImage\",\n          \"logs:CreateLogStream\",\n          \"logs:PutLogEvents\"\n        ],\n        \"Resource\": \"*\"\n      }\n    ]\n  }"
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "mycluster-ecs_task_role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROATKL4XQ4I5AOHUEPV7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "ecs_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::228431726353:role/mycluster-ecs_role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2022-06-07T06:00:23Z",
            "description": "",
            "force_detach_policies": false,
            "id": "mycluster-ecs_role",
            "inline_policy": [
              {
                "name": "mycluster_role_policy",
                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",\n        \"elasticloadbalancing:Describe*\",\n        \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",\n        \"ec2:Describe*\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}"
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "mycluster-ecs_role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROATKL4XQ4IVVZVMGCTX"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.ecs.data.aws_iam_policy_document.ecs_service_role"
          ]
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "ecs_execution_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "mycluster-ecs_task_role:mycluster_role_policy",
            "name": "mycluster_role_policy",
            "name_prefix": null,
            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"ecr:GetAuthorizationToken\",\n          \"ecr:BatchCheckLayerAvailability\",\n          \"ecr:GetDownloadUrlForLayer\",\n          \"ecr:BatchGetImage\",\n          \"logs:CreateLogStream\",\n          \"logs:PutLogEvents\"\n        ],\n        \"Resource\": \"*\"\n      }\n    ]\n  }",
            "role": "mycluster-ecs_task_role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.ecs.aws_iam_role.ecs_execution_role"
          ]
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "ecs_service_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "mycluster-ecs_role:mycluster_role_policy",
            "name": "mycluster_role_policy",
            "name_prefix": null,
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",\n        \"elasticloadbalancing:Describe*\",\n        \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",\n        \"ec2:Describe*\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "role": "mycluster-ecs_role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.ecs.aws_iam_role.ecs_role",
            "module.ecs.data.aws_iam_policy_document.ecs_service_policy",
            "module.ecs.data.aws_iam_policy_document.ecs_service_role"
          ]
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_lb_listener",
      "name": "front_end",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alpn_policy": null,
            "arn": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:listener/app/elb/d3a3cbb7de4891da/3107e0dd48dec735",
            "certificate_arn": null,
            "default_action": [
              {
                "authenticate_cognito": [],
                "authenticate_oidc": [],
                "fixed_response": [],
                "forward": [],
                "order": 1,
                "redirect": [],
                "target_group_arn": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:targetgroup/express-example-lb-tg-1/4bd72755068ddb0a",
                "type": "forward"
              }
            ],
            "id": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:listener/app/elb/d3a3cbb7de4891da/3107e0dd48dec735",
            "load_balancer_arn": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:loadbalancer/app/elb/d3a3cbb7de4891da",
            "port": 80,
            "protocol": "HTTP",
            "ssl_policy": "",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsicmVhZCI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.ecs.aws_alb.app_alb",
            "module.ecs.aws_alb_target_group.api_target_group2",
            "module.ecs.aws_security_group.elb_sg"
          ]
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_lb_listener",
      "name": "front_end_1",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alpn_policy": null,
            "arn": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:listener/app/elb/d3a3cbb7de4891da/deffa6cbd57b1e49",
            "certificate_arn": null,
            "default_action": [
              {
                "authenticate_cognito": [],
                "authenticate_oidc": [],
                "fixed_response": [],
                "forward": [],
                "order": 1,
                "redirect": [],
                "target_group_arn": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:targetgroup/express-example-lb-tg-1/4bd72755068ddb0a",
                "type": "forward"
              }
            ],
            "id": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:listener/app/elb/d3a3cbb7de4891da/deffa6cbd57b1e49",
            "load_balancer_arn": "arn:aws:elasticloadbalancing:ap-south-1:228431726353:loadbalancer/app/elb/d3a3cbb7de4891da",
            "port": 3000,
            "protocol": "HTTP",
            "ssl_policy": "",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsicmVhZCI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.ecs.aws_alb.app_alb",
            "module.ecs.aws_alb_target_group.api_target_group2",
            "module.ecs.aws_security_group.elb_sg"
          ]
        }
      ]
    },
    {
      "module": "module.ecs",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "elb_sg",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-south-1:228431726353:security-group/sg-0f3996329875fac92",
            "description": "Allow SSH inbound traffic",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0f3996329875fac92",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 3000,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 3000
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              }
            ],
            "name": "allow_SSH",
            "name_prefix": "",
            "owner_id": "228431726353",
            "revoke_rules_on_delete": false,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "vpc_id": "vpc-0304096b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "data",
      "type": "template_file",
      "name": "buildspec",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "04f052cc1618c1492342a1674ff1c50abf67b1292f7b1b9c77885f56e8c81a56",
            "rendered": "version: 0.2\n\nphases:\n  pre_build:\n    commands:\n      - echo Logging in to Amazon ECR...\n      - aws --version\n      - $(aws ecr get-login --region ap-south-1 --no-include-email)\n      - IMAGE_NAME=\"expressjs-repo\"\n      - REPOSITORY_URI=228431726353.dkr.ecr.ap-south-1.amazonaws.com/expressjs-repo\n      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)\n  build:\n    commands:\n      - echo Build started on `date`\n      - echo Building the Docker image...\n      - docker build -t $REPOSITORY_URI:latest .  \n      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Pushing the Docker images...\n      - docker push $REPOSITORY_URI:latest\n      - docker push $REPOSITORY_URI:$IMAGE_TAG\n      - echo Writing image definitions file...\n      - printf '[{\"name\":\"container\",\"imageUri\":\"%s\"}]' $REPOSITORY_URI:$IMAGE_TAG \u003e imagedefinitions.json\nartifacts:\n  files:\n    - imagedefinitions.json\n  discard-paths: yes",
            "template": "version: 0.2\n\nphases:\n  pre_build:\n    commands:\n      - echo Logging in to Amazon ECR...\n      - aws --version\n      - $(aws ecr get-login --region ${region} --no-include-email)\n      - IMAGE_NAME=\"expressjs-repo\"\n      - REPOSITORY_URI=${repository_url}\n      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)\n  build:\n    commands:\n      - echo Build started on `date`\n      - echo Building the Docker image...\n      - docker build -t $REPOSITORY_URI:latest . ${build_options}\n      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Pushing the Docker images...\n      - docker push $REPOSITORY_URI:latest\n      - docker push $REPOSITORY_URI:$IMAGE_TAG\n      - echo Writing image definitions file...\n      - printf '[{\"name\":\"${container_name}\",\"imageUri\":\"%s\"}]' $REPOSITORY_URI:$IMAGE_TAG \u003e imagedefinitions.json\nartifacts:\n  files:\n    - imagedefinitions.json\n  discard-paths: yes",
            "vars": {
              "build_options": " ",
              "cluster_name": "mycluster",
              "container_name": "container",
              "region": "ap-south-1",
              "repository_url": "228431726353.dkr.ecr.ap-south-1.amazonaws.com/expressjs-repo",
              "security_group_ids": "subnet-fa1e86b6,subnet-6b416b03,subnet-a472d0df"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "data",
      "type": "template_file",
      "name": "codebuild_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "70550916e04bf54781fd9542df11ba04a78cc930624a809af073269dce3808a3",
            "rendered": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"*\"\n        ],\n        \"Action\": [\n          \"logs:CreateLogGroup\",\n          \"logs:CreateLogStream\",\n          \"logs:PutLogEvents\",\n          \"ecr:GetAuthorizationToken\",\n          \"ecr:InitiateLayerUpload\",\n          \"ecr:UploadLayerPart\",\n          \"ecr:CompleteLayerUpload\",\n          \"ecr:BatchCheckLayerAvailability\",\n          \"ecr:PutImage\",\n          \"ecs:RunTask\",\n          \"iam:PassRole\"\n        ]\n      },\n      {\n        \"Effect\":\"Allow\",\n        \"Action\": [\n          \"s3:GetObject\",\n          \"s3:GetObjectVersion\",\n          \"s3:GetBucketVersioning\",\n          \"s3:List*\",\n          \"s3:PutObject\"\n        ],\n        \"Resource\": [\n          \"arn:aws:s3:::expressjsbucket11\",\n          \"arn:aws:s3:::expressjsbucket11/*\"\n        ]\n      }\n    ]\n  }",
            "template": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"*\"\n        ],\n        \"Action\": [\n          \"logs:CreateLogGroup\",\n          \"logs:CreateLogStream\",\n          \"logs:PutLogEvents\",\n          \"ecr:GetAuthorizationToken\",\n          \"ecr:InitiateLayerUpload\",\n          \"ecr:UploadLayerPart\",\n          \"ecr:CompleteLayerUpload\",\n          \"ecr:BatchCheckLayerAvailability\",\n          \"ecr:PutImage\",\n          \"ecs:RunTask\",\n          \"iam:PassRole\"\n        ]\n      },\n      {\n        \"Effect\":\"Allow\",\n        \"Action\": [\n          \"s3:GetObject\",\n          \"s3:GetObjectVersion\",\n          \"s3:GetBucketVersioning\",\n          \"s3:List*\",\n          \"s3:PutObject\"\n        ],\n        \"Resource\": [\n          \"${aws_s3_bucket_arn}\",\n          \"${aws_s3_bucket_arn}/*\"\n        ]\n      }\n    ]\n  }",
            "vars": {
              "aws_s3_bucket_arn": "arn:aws:s3:::expressjsbucket11"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "data",
      "type": "template_file",
      "name": "codepipeline_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "085ac7107f3318207fa36ac28f0bca48f19f56d39f6214338b6c46833e6566f2",
            "rendered": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\":\"Allow\",\n        \"Action\": [\n          \"s3:GetObject\",\n          \"s3:GetObjectVersion\",\n          \"s3:GetBucketVersioning\",\n          \"s3:List*\",\n          \"s3:PutObject\"\n        ],\n        \"Resource\": [\n          \"arn:aws:s3:::expressjsbucket11\",\n          \"arn:aws:s3:::expressjsbucket11/*\"\n        ]\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"codebuild:BatchGetBuilds\",\n          \"codebuild:StartBuild\"\n        ],\n        \"Resource\": \"*\"\n      },\n      {\n        \"Action\": [\n          \"ecs:*\",\n          \"events:DescribeRule\",\n          \"events:DeleteRule\",\n          \"events:ListRuleNamesByTarget\",\n          \"events:ListTargetsByRule\",\n          \"events:PutRule\",\n          \"events:PutTargets\",\n          \"events:RemoveTargets\",\n          \"iam:ListAttachedRolePolicies\",\n          \"iam:ListInstanceProfiles\",\n          \"iam:ListRoles\",\n          \"logs:CreateLogGroup\",\n          \"logs:DescribeLogGroups\",\n          \"logs:FilterLogEvents\"\n        ],\n        \"Resource\": \"*\",\n        \"Effect\": \"Allow\"\n      },\n      {\n        \"Action\": \"iam:PassRole\",\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"*\"\n        ],\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:PassedToService\": \"ecs-tasks.amazonaws.com\"\n          }\n        }\n      },\n      {\n        \"Action\": \"iam:PassRole\",\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"arn:aws:iam::*:role/ecsInstanceRole*\"\n        ],\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:PassedToService\": [\n              \"ec2.amazonaws.com\",\n              \"ec2.amazonaws.com.cn\"\n            ]\n          }\n        }\n      },\n      {\n        \"Action\": \"iam:PassRole\",\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"arn:aws:iam::*:role/ecsAutoscaleRole*\"\n        ],\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:PassedToService\": [\n              \"application-autoscaling.amazonaws.com\",\n              \"application-autoscaling.amazonaws.com.cn\"\n            ]\n          }\n        }\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": \"iam:CreateServiceLinkedRole\",\n        \"Resource\": \"*\",\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:AWSServiceName\": [\n              \"ecs.amazonaws.com\",\n              \"spot.amazonaws.com\",\n              \"spotfleet.amazonaws.com\"\n            ]\n          }\n        }\n      }\n    ]\n  }",
            "template": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\":\"Allow\",\n        \"Action\": [\n          \"s3:GetObject\",\n          \"s3:GetObjectVersion\",\n          \"s3:GetBucketVersioning\",\n          \"s3:List*\",\n          \"s3:PutObject\"\n        ],\n        \"Resource\": [\n          \"${aws_s3_bucket_arn}\",\n          \"${aws_s3_bucket_arn}/*\"\n        ]\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"codebuild:BatchGetBuilds\",\n          \"codebuild:StartBuild\"\n        ],\n        \"Resource\": \"*\"\n      },\n      {\n        \"Action\": [\n          \"ecs:*\",\n          \"events:DescribeRule\",\n          \"events:DeleteRule\",\n          \"events:ListRuleNamesByTarget\",\n          \"events:ListTargetsByRule\",\n          \"events:PutRule\",\n          \"events:PutTargets\",\n          \"events:RemoveTargets\",\n          \"iam:ListAttachedRolePolicies\",\n          \"iam:ListInstanceProfiles\",\n          \"iam:ListRoles\",\n          \"logs:CreateLogGroup\",\n          \"logs:DescribeLogGroups\",\n          \"logs:FilterLogEvents\"\n        ],\n        \"Resource\": \"*\",\n        \"Effect\": \"Allow\"\n      },\n      {\n        \"Action\": \"iam:PassRole\",\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"*\"\n        ],\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:PassedToService\": \"ecs-tasks.amazonaws.com\"\n          }\n        }\n      },\n      {\n        \"Action\": \"iam:PassRole\",\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"arn:aws:iam::*:role/ecsInstanceRole*\"\n        ],\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:PassedToService\": [\n              \"ec2.amazonaws.com\",\n              \"ec2.amazonaws.com.cn\"\n            ]\n          }\n        }\n      },\n      {\n        \"Action\": \"iam:PassRole\",\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"arn:aws:iam::*:role/ecsAutoscaleRole*\"\n        ],\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:PassedToService\": [\n              \"application-autoscaling.amazonaws.com\",\n              \"application-autoscaling.amazonaws.com.cn\"\n            ]\n          }\n        }\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": \"iam:CreateServiceLinkedRole\",\n        \"Resource\": \"*\",\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:AWSServiceName\": [\n              \"ecs.amazonaws.com\",\n              \"spot.amazonaws.com\",\n              \"spotfleet.amazonaws.com\"\n            ]\n          }\n        }\n      }\n    ]\n  }",
            "vars": {
              "aws_s3_bucket_arn": "arn:aws:s3:::expressjsbucket11"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_codebuild_project",
      "name": "app_build",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:codebuild:ap-south-1:228431726353:project/expresscodebuild",
            "artifacts": [
              {
                "artifact_identifier": "",
                "bucket_owner_access": "",
                "encryption_disabled": false,
                "location": "",
                "name": "expresscodebuild",
                "namespace_type": "",
                "override_artifact_name": false,
                "packaging": "NONE",
                "path": "",
                "type": "CODEPIPELINE"
              }
            ],
            "badge_enabled": false,
            "badge_url": "",
            "build_batch_config": [],
            "build_timeout": 5,
            "cache": [
              {
                "location": "",
                "modes": [],
                "type": "NO_CACHE"
              }
            ],
            "concurrent_build_limit": 0,
            "description": "",
            "encryption_key": "arn:aws:kms:ap-south-1:228431726353:alias/aws/s3",
            "environment": [
              {
                "certificate": "",
                "compute_type": "BUILD_GENERAL1_SMALL",
                "environment_variable": [],
                "image": "aws/codebuild/docker:17.09.0",
                "image_pull_credentials_type": "CODEBUILD",
                "privileged_mode": true,
                "registry_credential": [],
                "type": "LINUX_CONTAINER"
              }
            ],
            "file_system_locations": [],
            "id": "arn:aws:codebuild:ap-south-1:228431726353:project/expresscodebuild",
            "logs_config": [
              {
                "cloudwatch_logs": [
                  {
                    "group_name": "",
                    "status": "ENABLED",
                    "stream_name": ""
                  }
                ],
                "s3_logs": [
                  {
                    "bucket_owner_access": "",
                    "encryption_disabled": false,
                    "location": "",
                    "status": "DISABLED"
                  }
                ]
              }
            ],
            "name": "expresscodebuild",
            "project_visibility": "PRIVATE",
            "public_project_alias": "",
            "queued_timeout": 480,
            "resource_access_role": "",
            "secondary_artifacts": [],
            "secondary_source_version": [],
            "secondary_sources": [],
            "service_role": "arn:aws:iam::228431726353:role/expressjs-repo-codebuild-role",
            "source": [
              {
                "auth": [],
                "build_status_config": [],
                "buildspec": "version: 0.2\n\nphases:\n  pre_build:\n    commands:\n      - echo Logging in to Amazon ECR...\n      - aws --version\n      - $(aws ecr get-login --region ap-south-1 --no-include-email)\n      - IMAGE_NAME=\"expressjs-repo\"\n      - REPOSITORY_URI=228431726353.dkr.ecr.ap-south-1.amazonaws.com/expressjs-repo\n      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)\n  build:\n    commands:\n      - echo Build started on `date`\n      - echo Building the Docker image...\n      - docker build -t $REPOSITORY_URI:latest .  \n      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG\n  post_build:\n    commands:\n      - echo Build completed on `date`\n      - echo Pushing the Docker images...\n      - docker push $REPOSITORY_URI:latest\n      - docker push $REPOSITORY_URI:$IMAGE_TAG\n      - echo Writing image definitions file...\n      - printf '[{\"name\":\"container\",\"imageUri\":\"%s\"}]' $REPOSITORY_URI:$IMAGE_TAG \u003e imagedefinitions.json\nartifacts:\n  files:\n    - imagedefinitions.json\n  discard-paths: yes",
                "git_clone_depth": 0,
                "git_submodules_config": [],
                "insecure_ssl": false,
                "location": "",
                "report_build_status": false,
                "type": "CODEPIPELINE"
              }
            ],
            "source_version": "",
            "tags": {},
            "tags_all": {},
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.ecs.aws_ecr_repository.web-app",
            "module.pipeline.aws_iam_role.codebuild_role",
            "module.pipeline.data.template_file.buildspec"
          ]
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_codepipeline",
      "name": "pipeline",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:codepipeline:ap-south-1:228431726353:expresspipeline",
            "artifact_store": [
              {
                "encryption_key": [],
                "location": "expressjsbucket11",
                "region": "",
                "type": "S3"
              }
            ],
            "id": "expresspipeline",
            "name": "expresspipeline",
            "role_arn": "arn:aws:iam::228431726353:role/expressjs-repo-codepipeline-role",
            "stage": [
              {
                "action": [
                  {
                    "category": "Source",
                    "configuration": {
                      "Branch": "main",
                      "OAuthToken": "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",
                      "Owner": "shivani3495",
                      "PollForSourceChanges": "false",
                      "Repo": "expressjs"
                    },
                    "input_artifacts": [],
                    "name": "Source",
                    "namespace": "",
                    "output_artifacts": [
                      "SourceArtifact"
                    ],
                    "owner": "ThirdParty",
                    "provider": "GitHub",
                    "region": "",
                    "role_arn": "",
                    "run_order": 1,
                    "version": "1"
                  }
                ],
                "name": "Source"
              },
              {
                "action": [
                  {
                    "category": "Build",
                    "configuration": {
                      "ProjectName": "expresscodebuild"
                    },
                    "input_artifacts": [
                      "SourceArtifact"
                    ],
                    "name": "Build",
                    "namespace": "",
                    "output_artifacts": [
                      "imagedefinitions"
                    ],
                    "owner": "AWS",
                    "provider": "CodeBuild",
                    "region": "",
                    "role_arn": "",
                    "run_order": 1,
                    "version": "1"
                  }
                ],
                "name": "Build"
              },
              {
                "action": [
                  {
                    "category": "Deploy",
                    "configuration": {
                      "ClusterName": "mycluster",
                      "FileName": "imagedefinitions.json",
                      "ServiceName": "expressservice"
                    },
                    "input_artifacts": [
                      "imagedefinitions"
                    ],
                    "name": "Deploy",
                    "namespace": "",
                    "output_artifacts": [],
                    "owner": "AWS",
                    "provider": "ECS",
                    "region": "",
                    "role_arn": "",
                    "run_order": 1,
                    "version": "1"
                  }
                ],
                "name": "Production"
              }
            ],
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.pipeline.aws_iam_role.codepipeline_role",
            "module.pipeline.aws_s3_bucket.source"
          ]
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "codebuild_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::228431726353:role/expressjs-repo-codebuild-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codebuild.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2022-06-07T06:00:23Z",
            "description": "",
            "force_detach_policies": false,
            "id": "expressjs-repo-codebuild-role",
            "inline_policy": [
              {
                "name": "codebuild-policy",
                "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"*\"\n        ],\n        \"Action\": [\n          \"logs:CreateLogGroup\",\n          \"logs:CreateLogStream\",\n          \"logs:PutLogEvents\",\n          \"ecr:GetAuthorizationToken\",\n          \"ecr:InitiateLayerUpload\",\n          \"ecr:UploadLayerPart\",\n          \"ecr:CompleteLayerUpload\",\n          \"ecr:BatchCheckLayerAvailability\",\n          \"ecr:PutImage\",\n          \"ecs:RunTask\",\n          \"iam:PassRole\"\n        ]\n      },\n      {\n        \"Effect\":\"Allow\",\n        \"Action\": [\n          \"s3:GetObject\",\n          \"s3:GetObjectVersion\",\n          \"s3:GetBucketVersioning\",\n          \"s3:List*\",\n          \"s3:PutObject\"\n        ],\n        \"Resource\": [\n          \"arn:aws:s3:::expressjsbucket11\",\n          \"arn:aws:s3:::expressjsbucket11/*\"\n        ]\n      }\n    ]\n  }"
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "expressjs-repo-codebuild-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROATKL4XQ4I7IZSDNLER"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "codepipeline_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::228431726353:role/expressjs-repo-codepipeline-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codepipeline.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2022-06-07T06:00:23Z",
            "description": "",
            "force_detach_policies": false,
            "id": "expressjs-repo-codepipeline-role",
            "inline_policy": [
              {
                "name": "codepipeline_policy",
                "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\":\"Allow\",\n        \"Action\": [\n          \"s3:GetObject\",\n          \"s3:GetObjectVersion\",\n          \"s3:GetBucketVersioning\",\n          \"s3:List*\",\n          \"s3:PutObject\"\n        ],\n        \"Resource\": [\n          \"arn:aws:s3:::expressjsbucket11\",\n          \"arn:aws:s3:::expressjsbucket11/*\"\n        ]\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"codebuild:BatchGetBuilds\",\n          \"codebuild:StartBuild\"\n        ],\n        \"Resource\": \"*\"\n      },\n      {\n        \"Action\": [\n          \"ecs:*\",\n          \"events:DescribeRule\",\n          \"events:DeleteRule\",\n          \"events:ListRuleNamesByTarget\",\n          \"events:ListTargetsByRule\",\n          \"events:PutRule\",\n          \"events:PutTargets\",\n          \"events:RemoveTargets\",\n          \"iam:ListAttachedRolePolicies\",\n          \"iam:ListInstanceProfiles\",\n          \"iam:ListRoles\",\n          \"logs:CreateLogGroup\",\n          \"logs:DescribeLogGroups\",\n          \"logs:FilterLogEvents\"\n        ],\n        \"Resource\": \"*\",\n        \"Effect\": \"Allow\"\n      },\n      {\n        \"Action\": \"iam:PassRole\",\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"*\"\n        ],\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:PassedToService\": \"ecs-tasks.amazonaws.com\"\n          }\n        }\n      },\n      {\n        \"Action\": \"iam:PassRole\",\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"arn:aws:iam::*:role/ecsInstanceRole*\"\n        ],\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:PassedToService\": [\n              \"ec2.amazonaws.com\",\n              \"ec2.amazonaws.com.cn\"\n            ]\n          }\n        }\n      },\n      {\n        \"Action\": \"iam:PassRole\",\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"arn:aws:iam::*:role/ecsAutoscaleRole*\"\n        ],\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:PassedToService\": [\n              \"application-autoscaling.amazonaws.com\",\n              \"application-autoscaling.amazonaws.com.cn\"\n            ]\n          }\n        }\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": \"iam:CreateServiceLinkedRole\",\n        \"Resource\": \"*\",\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:AWSServiceName\": [\n              \"ecs.amazonaws.com\",\n              \"spot.amazonaws.com\",\n              \"spotfleet.amazonaws.com\"\n            ]\n          }\n        }\n      }\n    ]\n  }"
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "expressjs-repo-codepipeline-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROATKL4XQ4IX4MXCKDC3"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "codebuild_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "expressjs-repo-codebuild-role:codebuild-policy",
            "name": "codebuild-policy",
            "name_prefix": null,
            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"*\"\n        ],\n        \"Action\": [\n          \"logs:CreateLogGroup\",\n          \"logs:CreateLogStream\",\n          \"logs:PutLogEvents\",\n          \"ecr:GetAuthorizationToken\",\n          \"ecr:InitiateLayerUpload\",\n          \"ecr:UploadLayerPart\",\n          \"ecr:CompleteLayerUpload\",\n          \"ecr:BatchCheckLayerAvailability\",\n          \"ecr:PutImage\",\n          \"ecs:RunTask\",\n          \"iam:PassRole\"\n        ]\n      },\n      {\n        \"Effect\":\"Allow\",\n        \"Action\": [\n          \"s3:GetObject\",\n          \"s3:GetObjectVersion\",\n          \"s3:GetBucketVersioning\",\n          \"s3:List*\",\n          \"s3:PutObject\"\n        ],\n        \"Resource\": [\n          \"arn:aws:s3:::expressjsbucket11\",\n          \"arn:aws:s3:::expressjsbucket11/*\"\n        ]\n      }\n    ]\n  }",
            "role": "expressjs-repo-codebuild-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.pipeline.aws_iam_role.codebuild_role",
            "module.pipeline.aws_s3_bucket.source",
            "module.pipeline.data.template_file.codebuild_policy"
          ]
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "codepipeline_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "expressjs-repo-codepipeline-role:codepipeline_policy",
            "name": "codepipeline_policy",
            "name_prefix": null,
            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\":\"Allow\",\n        \"Action\": [\n          \"s3:GetObject\",\n          \"s3:GetObjectVersion\",\n          \"s3:GetBucketVersioning\",\n          \"s3:List*\",\n          \"s3:PutObject\"\n        ],\n        \"Resource\": [\n          \"arn:aws:s3:::expressjsbucket11\",\n          \"arn:aws:s3:::expressjsbucket11/*\"\n        ]\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n          \"codebuild:BatchGetBuilds\",\n          \"codebuild:StartBuild\"\n        ],\n        \"Resource\": \"*\"\n      },\n      {\n        \"Action\": [\n          \"ecs:*\",\n          \"events:DescribeRule\",\n          \"events:DeleteRule\",\n          \"events:ListRuleNamesByTarget\",\n          \"events:ListTargetsByRule\",\n          \"events:PutRule\",\n          \"events:PutTargets\",\n          \"events:RemoveTargets\",\n          \"iam:ListAttachedRolePolicies\",\n          \"iam:ListInstanceProfiles\",\n          \"iam:ListRoles\",\n          \"logs:CreateLogGroup\",\n          \"logs:DescribeLogGroups\",\n          \"logs:FilterLogEvents\"\n        ],\n        \"Resource\": \"*\",\n        \"Effect\": \"Allow\"\n      },\n      {\n        \"Action\": \"iam:PassRole\",\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"*\"\n        ],\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:PassedToService\": \"ecs-tasks.amazonaws.com\"\n          }\n        }\n      },\n      {\n        \"Action\": \"iam:PassRole\",\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"arn:aws:iam::*:role/ecsInstanceRole*\"\n        ],\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:PassedToService\": [\n              \"ec2.amazonaws.com\",\n              \"ec2.amazonaws.com.cn\"\n            ]\n          }\n        }\n      },\n      {\n        \"Action\": \"iam:PassRole\",\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"arn:aws:iam::*:role/ecsAutoscaleRole*\"\n        ],\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:PassedToService\": [\n              \"application-autoscaling.amazonaws.com\",\n              \"application-autoscaling.amazonaws.com.cn\"\n            ]\n          }\n        }\n      },\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": \"iam:CreateServiceLinkedRole\",\n        \"Resource\": \"*\",\n        \"Condition\": {\n          \"StringLike\": {\n            \"iam:AWSServiceName\": [\n              \"ecs.amazonaws.com\",\n              \"spot.amazonaws.com\",\n              \"spotfleet.amazonaws.com\"\n            ]\n          }\n        }\n      }\n    ]\n  }",
            "role": "expressjs-repo-codepipeline-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.pipeline.aws_iam_role.codepipeline_role",
            "module.pipeline.aws_s3_bucket.source",
            "module.pipeline.data.template_file.codepipeline_policy"
          ]
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "source",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "private",
            "arn": "arn:aws:s3:::expressjsbucket11",
            "bucket": "expressjsbucket11",
            "bucket_domain_name": "expressjsbucket11.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "expressjsbucket11.s3.ap-south-1.amazonaws.com",
            "cors_rule": [],
            "force_destroy": true,
            "grant": [
              {
                "id": "369b5abe82fab506fca49ba70acefb369971833612de770f813587df3e025d61",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z11RGJOFQNVJUP",
            "id": "expressjsbucket11",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "",
            "region": "ap-south-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {},
            "tags_all": {},
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
